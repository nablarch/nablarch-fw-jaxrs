group = 'com.nablarch.framework'
version = '1.0.3'
description = 'JAX-RS'

buildscript {
  repositories {
    mavenLocal()
    maven { url "${developLibUrl}" }
    jcenter()

    // サードパーティ製ライブラリの格納リポジトリ
    if(project.hasProperty('nablarchExtRepoUrl')) {
       maven { url "${nablarchExtRepoUrl}" }
     }

  }
  dependencies {
    classpath "com.nablarch.dev:nablarch-gradle-plugin:${nablarchGradlePluginVersion}"
    classpath "net.saliman:gradle-cobertura-plugin:${coberturaPluginVersion}"
  }
}
apply plugin: 'com.nablarch.dev.nablarch-build'
apply plugin: 'com.nablarch.dev.nablarch-maven-deploy'
apply plugin: 'com.nablarch.dev.nablarch-sonarqube'
apply plugin: 'com.nablarch.dev.nablarch-version'
apply from: 'https://github.com/nablarch/nablarch-gradle-plugin/blob/develop/scripts/cobertura/cobertura-0.0.1.gradle?raw=true'

// ビルド時のJavaバージョンを指定する
sourceCompatibility=JavaVersion.VERSION_1_6
targetCompatibility=JavaVersion.VERSION_1_6

configurations {
  integrationTest
  integrationTest.extendsFrom testCompile
  glassfish
  glassfish.extendsFrom integrationTest
  jboss
  jboss.extendsFrom integrationTest
  
  all*.exclude module: 'commons-dbcp'
}

sourceSets.test.compileClasspath += configurations.glassfish

eclipse {
  classpath.plusConfigurations += [configurations.glassfish]
}
idea {
  module {
    scopes.TEST.plus += [configurations.glassfish]
  }
}

dependencies {
  provided 'javax:javaee-api:7.0'
  testRuntime 'javax:javaee-api:7.0'

  compile "com.nablarch.framework:nablarch-fw-web:${nablarchFwWebVersion}"
  compile "com.nablarch.framework:nablarch-core-validation-ee:${nablarchCoreValidationEeVersion}"

  // test api
  testCompile 'org.jmockit:jmockit:1.31'
  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:hamcrest-all:1.3'

  testRuntime 'org.hibernate:hibernate-validator:5.1.3.Final'

  // integration test api
  testCompile 'org.jboss.arquillian.junit:arquillian-junit-container:1.1.13.Final'

  glassfish 'org.glassfish.main.extras:glassfish-embedded-all:4.1.1'
  glassfish 'org.jboss.arquillian.container:arquillian-glassfish-embedded-3.1:1.0.0.Final'

  jboss ('org.wildfly:wildfly-arquillian-container-managed:8.2.1.Final') {
    exclude group:'*', module: 'xnio-api'
    exclude group:'*', module: 'xnio-nio'
    exclude group:'*', module: 'arquillian-container-test-impl-base'
  }
  jboss 'org.jboss.resteasy:resteasy-client:3.0.13.Final'
  jboss 'org.jboss.resteasy:resteasy-jackson-provider:3.0.13.Final'
  jboss 'org.jboss.xnio:xnio-api:3.3.1.Final'
  jboss 'org.jboss.xnio:xnio-nio:3.3.1.Final'

  testCompile 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-gradle-depchain:2.2.1'
  integrationTest 'org.slf4j:slf4j-api:1.7.13'
  integrationTest 'org.slf4j:slf4j-simple:1.7.13'
  integrationTest "com.nablarch.framework:nablarch-common-dao:${nablarchCommonDaoVersion}"
  integrationTest "com.nablarch.framework:nablarch-common-jdbc:${nablarchCommonJdbcVersion}"

  integrationTest('com.nablarch.integration:nablarch-jersey-adaptor:+') {
    exclude group:'*', module: 'nablarch-fw-jaxrs'
  }
  integrationTest 'org.codehaus.jackson:jackson-mapper-asl:1.9.12'

  integrationTest 'com.nablarch.integration:nablarch-router-adaptor:1.0.1'
  integrationTest 'com.google.http-client:google-http-client:1.21.0'
  
  testRuntime 'log4j:log4j:1.2.17'
}

test {
  jvmArgs(
      '-XX:+UseParallelGC',
      '-Dfile.encoding=UTF-8'
  )
  classpath = sourceSets.test.runtimeClasspath + configurations.glassfish
}

/**
 * JBOSS(WildFly)でテストを実行するためのタスク。
 *
 * このタスクを実行するためには、JAVA_HOME環境変数にJava8のホームディレクトリを指定する必要がある。
 * また、Gradle起動時にシステムプロパティにJBOSS_HOMEを設定する必要がある。
 *
 * 例:gradlew jbossIntegrationTest -DJBOSS_HOME=/opt/jboss
 */
task jbossIntegrationTest(type: Test, dependsOn: testClasses) {
  systemProperty 'file.encoding', 'UTF-8'
  systemProperty 'arquillian.launch', 'jboss'

  environment('JBOSS_HOME', System.getProperty('JBOSS_HOME'))
  environment('JDK8_HOME', System.getenv('JAVA_HOME'))


  jvmArgs(
      '-XX:+UseParallelGC'
  )
  classpath = sourceSets.test.runtimeClasspath + configurations.jboss
}

tasks.sonarRunner {
  dependsOn = ['coverage']
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.13'
}
